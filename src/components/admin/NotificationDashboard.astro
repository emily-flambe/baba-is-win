---
export interface NotificationStats {
  total: number;
  pending: number;
  sent: number;
  failed: number;
  retryable: number;
}

export interface Props {
  stats: NotificationStats;
}

const { stats } = Astro.props;
---

<div class="notification-dashboard">
  <div class="dashboard-header">
    <h2>Notification Statistics</h2>
    <p>Overview of email notification activity</p>
  </div>
  
  <div class="stats-grid">
    <div class="stat-card">
      <div class="stat-icon">üìß</div>
      <div class="stat-info">
        <div class="stat-value">{stats.total}</div>
        <div class="stat-label">Total Notifications</div>
      </div>
    </div>
    
    <div class="stat-card success">
      <div class="stat-icon">‚úÖ</div>
      <div class="stat-info">
        <div class="stat-value">{stats.sent}</div>
        <div class="stat-label">Successfully Sent</div>
      </div>
    </div>
    
    <div class="stat-card warning">
      <div class="stat-icon">‚è≥</div>
      <div class="stat-info">
        <div class="stat-value">{stats.pending}</div>
        <div class="stat-label">Pending</div>
      </div>
    </div>
    
    <div class="stat-card error">
      <div class="stat-icon">‚ùå</div>
      <div class="stat-info">
        <div class="stat-value">{stats.failed}</div>
        <div class="stat-label">Failed</div>
      </div>
    </div>
    
    <div class="stat-card retry">
      <div class="stat-icon">üîÑ</div>
      <div class="stat-info">
        <div class="stat-value">{stats.retryable}</div>
        <div class="stat-label">Retryable</div>
      </div>
    </div>
  </div>
</div>

<style>
  .notification-dashboard {
    margin-bottom: 2rem;
  }

  .dashboard-header {
    margin-bottom: 1.5rem;
  }

  .dashboard-header h2 {
    margin: 0 0 0.5rem 0;
    color: var(--text-main);
    font-size: 1.5rem;
  }

  .dashboard-header p {
    color: var(--text-secondary);
    margin: 0;
    font-size: 0.9rem;
  }

  .stats-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: 1rem;
  }

  .stat-card {
    background: var(--bg-secondary);
    border: 1px solid var(--text-secondary);
    border-radius: 8px;
    padding: 1.5rem;
    display: flex;
    align-items: center;
    gap: 1rem;
    transition: all 0.2s ease;
  }

  .stat-card:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
  }

  .stat-card.success {
    border-left: 4px solid #28a745;
  }

  .stat-card.warning {
    border-left: 4px solid #ffc107;
  }

  .stat-card.error {
    border-left: 4px solid #dc3545;
  }

  .stat-card.retry {
    border-left: 4px solid #17a2b8;
  }

  .stat-icon {
    font-size: 2rem;
    opacity: 0.8;
  }

  .stat-info {
    flex: 1;
  }

  .stat-value {
    font-size: 1.8rem;
    font-weight: bold;
    color: var(--text-main);
    line-height: 1;
    margin-bottom: 0.25rem;
  }

  .stat-label {
    font-size: 0.875rem;
    color: var(--text-secondary);
    text-transform: uppercase;
    letter-spacing: 0.5px;
  }

  @media (max-width: 768px) {
    .stats-grid {
      grid-template-columns: 1fr;
    }
    
    .stat-card {
      padding: 1rem;
    }
    
    .stat-icon {
      font-size: 1.5rem;
    }
    
    .stat-value {
      font-size: 1.5rem;
    }
  }
</style>