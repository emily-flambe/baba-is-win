---
import type { MuseumProject } from '../../lib/github/types.js';
import { PROJECT_CATEGORIES } from '../../lib/github/types.js';

export interface Props {
  project: MuseumProject;
  featured?: boolean;
  size?: 'small' | 'medium' | 'large';
}

const { project, featured = false, size = 'medium' } = Astro.props;
const category = PROJECT_CATEGORIES[project.category];
const updatedDate = new Date(project.updatedAt).toLocaleDateString('en-US', {
  year: 'numeric',
  month: 'short',
  day: 'numeric'
});
const createdDate = new Date(project.createdAt).toLocaleDateString('en-US', {
  year: 'numeric',
  month: 'short',
  day: 'numeric'
});
---

<article 
  class={`project-card ${size} ${featured ? 'featured' : ''}`}
  data-category={project.category}
  data-language={project.language || 'unknown'}
>
  <header class="card-header">
    <div class="project-title-group">
      <h3 class="project-title">{project.displayName}</h3>
    </div>
    
    <div class="project-meta">
      {project.language && (
        <span class="language-tag" data-language={project.language}>
          {project.language}
        </span>
      )}
    </div>
  </header>

  <div class="card-content">
    <p class="project-description">{project.description}</p>
    
    {project.extendedDescription && (
      <div class="accordion-section">
        <button class="accordion-toggle" aria-expanded="false">
          <span class="toggle-text">More details</span>
          <svg class="chevron" width="12" height="12" viewBox="0 0 12 12" fill="none">
            <path d="M4 3L8 6L4 9" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
          </svg>
        </button>
        <div class="accordion-content">
          <p class="extended-description">{project.extendedDescription}</p>
        </div>
      </div>
    )}
    
    {project.topics.length > 0 && (
      <div class="project-topics">
        {project.topics.slice(0, 3).map(topic => (
          <span class="topic-tag">#{topic}</span>
        ))}
        {project.topics.length > 3 && (
          <span class="topic-more">+{project.topics.length - 3} more</span>
        )}
      </div>
    )}
  </div>

  <footer class="card-footer">
    <div class="project-stats">
      <span class="stat-item created" title={`Created ${createdDate}`}>
        Created {createdDate}
      </span>
      <span class="stat-item updated" title={`Updated ${updatedDate}`}>
        Updated {updatedDate}
      </span>
    </div>
    
    <div class="project-links">
      <a 
        href={project.githubUrl} 
        class="github-link"
        target="_blank"
        rel="noopener noreferrer"
        title="View source code"
      >
        <svg width="16" height="16" viewBox="0 0 24 24" fill="currentColor">
          <path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"/>
        </svg>
        Code
      </a>
      
      {project.demoUrl && (
        <a 
          href={project.demoUrl} 
          class="demo-link"
          target="_blank"
          rel="noopener noreferrer"
          title="View live demo"
        >
          <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <path d="m9 18 6-6-6-6"/>
          </svg>
          Demo
        </a>
      )}
    </div>
  </footer>
</article>

<style>
  .project-card {
    background: rgba(200, 200, 200, 0.1);
    border: 1px solid rgba(200, 200, 200, 0.15);
    border-radius: 0.75rem;
    padding: 1.5rem;
    transition: all 0.2s ease;
    display: flex;
    flex-direction: column;
    box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.2), 0 1px 2px 0 rgba(0, 0, 0, 0.1);
    font-family: var(--font-family-serif);
    color: var(--text-main);
  }

  .project-card:hover {
    transform: translateY(-4px);
    box-shadow: 0 10px 25px -5px rgba(0, 0, 0, 0.3), 0 10px 10px -5px rgba(0, 0, 0, 0.2);
    border-color: var(--primary-color);
  }

  .project-card.featured {
    border-color: #fbbf24;
    background: linear-gradient(135deg, #fffbeb 0%, #ffffff 100%);
  }

  .project-card.featured:hover {
    border-color: #f59e0b;
    box-shadow: 0 10px 25px -5px rgba(245, 158, 11, 0.2), 0 10px 10px -5px rgba(245, 158, 11, 0.1);
  }

  /* Card Sizes */
  .project-card.small {
    padding: 1rem;
  }

  .project-card.large {
    padding: 2rem;
  }

  /* Header */
  .card-header {
    margin-bottom: 1rem;
  }

  .project-title-group {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    margin-bottom: 0.75rem;
  }

  .project-title {
    font-family: var(--font-family-sans);
    font-size: 1.6em;
    font-weight: 700;
    color: #cce8ec;
    margin: 0 0 0.5em 0;
    line-height: 1.2;
  }


  .project-meta {
    display: flex;
    gap: 0.5rem;
    flex-wrap: wrap;
  }

  .language-tag {
    background: rgba(200, 200, 200, 0.15);
    color: var(--text-secondary);
    font-size: 0.75rem;
    font-weight: 500;
    padding: 0.25rem 0.5rem;
    border-radius: 0.375rem;
    border: 1px solid rgba(200, 200, 200, 0.2);
    font-family: var(--font-family-sans);
  }

  .language-tag[data-language="TypeScript"] { background: #3178c6; color: white; }
  .language-tag[data-language="JavaScript"] { background: #f7df1e; color: black; }
  .language-tag[data-language="Python"] { background: #3776ab; color: white; }
  .language-tag[data-language="HTML"] { background: #e34f26; color: white; }
  .language-tag[data-language="CSS"] { background: #1572b6; color: white; }


  /* Content */
  .card-content {
    margin-bottom: 1rem;
  }

  .project-description {
    color: var(--text-secondary);
    font-size: 1.15rem;
    line-height: 1.75em;
    margin: 1.2em 0;
    font-family: var(--font-family-serif);
  }

  /* Accordion Styles */
  .accordion-section {
    margin: 1rem 0;
  }

  .accordion-toggle {
    display: flex;
    align-items: center;
    justify-content: space-between;
    width: 100%;
    padding: 0.5rem 0;
    background: none;
    border: none;
    cursor: pointer;
    font-size: 0.875rem;
    font-weight: 500;
    color: var(--primary-color);
    text-align: left;
    transition: color 0.2s ease;
    font-family: var(--font-family-sans);
  }

  .accordion-toggle:hover {
    color: #80c8d2;
  }

  .chevron {
    transition: transform 0.2s ease;
    flex-shrink: 0;
  }

  .accordion-toggle[aria-expanded="true"] .chevron {
    transform: rotate(90deg);
  }

  .accordion-content {
    max-height: 0;
    overflow: hidden;
    transition: max-height 0.3s ease;
  }

  .accordion-content.expanded {
    max-height: 200px;
  }

  .extended-description {
    padding: 0.75rem 0 0 0;
    margin: 0;
    color: var(--text-secondary);
    line-height: 1.75em;
    font-size: 1rem;
    border-top: 1px solid rgba(200, 200, 200, 0.15);
    font-family: var(--font-family-serif);
  }

  .project-topics {
    display: flex;
    gap: 0.375rem;
    flex-wrap: wrap;
    align-items: center;
  }

  .topic-tag {
    background: rgba(200, 200, 200, 0.1);
    color: var(--text-secondary);
    font-size: 0.75rem;
    padding: 0.125rem 0.375rem;
    border-radius: 0.25rem;
    border: 1px solid rgba(200, 200, 200, 0.2);
    font-family: var(--font-family-sans);
  }

  .topic-more {
    color: var(--text-secondary);
    font-size: 0.75rem;
    font-style: italic;
    font-family: var(--font-family-sans);
  }

  /* Footer */
  .card-footer {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding-top: 1rem;
    border-top: 1px solid rgba(200, 200, 200, 0.15);
    gap: 1rem;
  }

  .project-stats {
    display: flex;
    gap: 1rem;
    flex-wrap: wrap;
  }

  .stat-item {
    color: var(--text-secondary);
    font-size: 0.875rem;
    display: flex;
    align-items: center;
    gap: 0.25rem;
    font-family: var(--font-family-sans);
  }

  .project-links {
    display: flex;
    gap: 0.5rem;
    flex-shrink: 0;
  }

  .github-link,
  .demo-link {
    display: flex;
    align-items: center;
    gap: 0.375rem;
    padding: 0.5rem 0.75rem;
    border-radius: 0.375rem;
    font-size: 0.875rem;
    font-weight: 500;
    text-decoration: none;
    transition: all 0.2s ease;
    font-family: var(--font-family-sans);
  }

  .github-link {
    background: rgba(200, 200, 200, 0.1);
    color: var(--text-main);
    border: 1px solid rgba(200, 200, 200, 0.2);
  }

  .github-link:hover {
    background: rgba(200, 200, 200, 0.2);
    color: var(--primary-color);
    transform: translateY(-1px);
  }

  .demo-link {
    background: var(--primary-color);
    color: #ffffff;
  }

  .demo-link:hover {
    background: #6ab8c5;
    transform: translateY(-1px);
  }

  /* Mobile responsive */
  @media (max-width: 640px) {
    .project-card {
      padding: 1rem;
    }

    .project-title {
      font-size: 1.125rem;
    }

    .card-footer {
      flex-direction: column;
      align-items: flex-start;
      gap: 0.75rem;
    }

    .project-stats {
      gap: 0.75rem;
    }

    .project-links {
      width: 100%;
      justify-content: flex-end;
    }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const accordionToggles = document.querySelectorAll('.accordion-toggle');
    
    accordionToggles.forEach(toggle => {
      toggle.addEventListener('click', () => {
        const isExpanded = toggle.getAttribute('aria-expanded') === 'true';
        const content = toggle.nextElementSibling;
        
        // Toggle aria-expanded
        toggle.setAttribute('aria-expanded', (!isExpanded).toString());
        
        // Toggle content visibility
        if (content) {
          content.classList.toggle('expanded', !isExpanded);
        }
      });
    });
  });
</script>