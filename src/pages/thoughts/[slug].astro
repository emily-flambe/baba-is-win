---
import BaseLayout from '../../layouts/BaseLayout.astro';
import Carousel from '../../components/Carousel.astro';
import { processSimpleMarkdown } from '../../utils/simpleMarkdown.js';

const { slug } = Astro.params;

// Load all thoughts and find the matching one
const thoughtModules = import.meta.glob('../../data/thoughts/published/*.md', { eager: true });
const thoughts = Object.entries(thoughtModules).map(([path, module]) => ({
  ...module,
  file: path
}));

const thought = thoughts.find(t => {
  const thoughtSlug = t.file.split('/').pop().split('.').shift();
  return thoughtSlug === slug;
});

if (!thought) {
  throw new Error(`Thought not found: ${slug}`);
}

const { frontmatter } = thought;
const { content, publishDate, publishTime, tags, images, color } = frontmatter;
const bgColor = color || 'var(--background-body)';
const permalink = `${Astro.site.href}thoughts/${slug}`;
---

<BaseLayout title="Thought" description={content.substring(0, 100) + '...'} permalink={permalink} current="thoughts">
  <div class="container">
    <article class="thought-single" style={`background-color: ${bgColor};`}>
      <div class="thought-header">
        <time>{publishDate} at {publishTime}</time>
      </div>
      <div class="thought-body">
        <p set:html={processSimpleMarkdown(content)}></p>
        {images && images.length > 0 && (
          <Carousel images={images} alt="Thought image" size="large" />
        )}
      </div>
      {tags && tags.length > 0 && (
        <div class="thought-tags">
          {tags.map((tag) => (
            <span class="tag">#{tag}</span>
          ))}
        </div>
      )}
    </article>
    <div class="back-link">
      <a href="/thoughts">‚Üê Back to all thoughts</a>
    </div>
  </div>
</BaseLayout>

<style>
  .thought-single {
    max-width: 600px;
    margin: 4rem auto;
    border: 1px solid var(--text-secondary);
    border-radius: 12px;
    padding: 2rem;
  }

  .thought-header {
    margin-bottom: 1.5rem;
  }

  .thought-header time {
    font-family: var(--font-family-sans);
    color: var(--text-secondary);
    font-size: 0.9rem;
    text-transform: uppercase;
  }

  .thought-body p {
    font-size: 1.3rem;
    line-height: 1.8;
    margin: 0;
  }

  .thought-tags {
    margin-top: 1.5rem;
    display: flex;
    gap: 0.75rem;
    flex-wrap: wrap;
  }

  .tag {
    color: var(--primary-color);
    font-family: var(--font-family-sans);
    font-size: 0.9rem;
    opacity: 0.8;
  }

  .back-link {
    text-align: center;
    margin: 3rem 0;
  }

  .back-link a {
    color: var(--text-secondary);
    text-decoration: none;
    font-family: var(--font-family-sans);
    font-weight: 600;
  }

  .back-link a:hover {
    text-decoration: underline;
  }

  @media (max-width: 600px) {
    .thought-single {
      margin: 2rem auto;
      padding: 1.5rem;
    }

    .thought-body p {
      font-size: 1.1rem;
    }
  }
</style>