---
import BaseLayout from '../../layouts/BaseLayout.astro';

// Import the tags from the tags index page
const allPostsForTags = Object.values(import.meta.glob('../../data/blog-posts/published/*.md', { eager: true }));
const tags = [...new Set(allPostsForTags.map((post: any) => post.frontmatter.tags).flat())]
  .filter(tag => tag)
  .sort(); // Sort tags alphabetically

const title = 'Blog';
const description = 'Latest articles.';
const permalink = `${Astro.site.href}blog`;

let allPosts = await Astro.glob('../../data/blog-posts/published/*.md');
allPosts = allPosts.sort((a, b) => new Date(b.frontmatter.publishDate).valueOf() - new Date(a.frontmatter.publishDate).valueOf());
---

<BaseLayout title={title} description={description} permalink={permalink} current="blog">
  <div class="container">
    <div class="tags-list">
      <p class="tags">
        Filter posts by tag:
        <br><i>
        {tags.map((tag, index) => (
          <>
            {index > 0 && ', '}
            <a href={`/tags/${tag}`}>{tag}</a>
          </>
        ))}
        </i>
      </p>
    </div>
    <hr />
    {allPosts.map((post, index) => {
      const href = `/blog/${post.file.split('/').pop().split('.').shift()}`;
      const imageUrl = post.frontmatter.thumbnail; // Use the thumbnail field from frontmatter
      const isEven = index % 2 === 0;
      const postTags = post.frontmatter.tags || []; // Get tags from frontmatter
      return (
        <div>
          { index !== 0 && <hr /> }
          <div class={`post-item ${isEven ? 'image-left' : 'image-right'}`}>
            {imageUrl && <img src={imageUrl} alt={post.frontmatter.title} class="post-image" />}
            <div class="post-content">

              <div class="post-item-footer">
                <span class="post-item-date">{post.frontmatter.publishDate}</span>
              </div>
              <h2>
                <a href={href}>{post.frontmatter.title}</a>
              </h2>
              <p>{post.frontmatter.description}</p>

              <p style="font-size: 0.85em;">Tags:
              <br><i>
                {postTags.map((tag, index) => (
                  <>
                    {index > 0 && ', '}
                    <a href={`/tags/${tag}`}>{tag}</a>
                  </>
                ))}
              </i></p>
            </div>
          </div>
        </div>
      )
    })}
  </div>
</BaseLayout>

<style>
  h2,
  .post-item-footer {
    font-family: var(--font-family-sans);
    font-weight: 700;
  }

  .post-item-date {
    color: var(--text-secondary);
    text-align: left;
    text-transform: uppercase;
    margin-right: 16px;
  }

  hr {
    margin: 60px auto;
  }

  .tags-list {
    margin-top: 20px;
  }

  .tags {
    font-size: 0.875em; /* Smaller font size for tags */
  }

  .post-item {
    display: flex;
    align-items: center;
    justify-content: space-between;
    margin-bottom: 20px;
  }

  .post-content {
    flex: 1;
    margin: 0 20px;
  }

  .post-image {
    max-width: 300px; /* Adjust the size as needed */
    height: auto;
    padding: 0 10px; /* Add horizontal padding */
  }

  .image-left .post-image {
    order: -1; /* Image appears on the left */
  }

  .image-right .post-image {
    order: 1; /* Image appears on the right */
  }

  .post-content p i {
    font-size: 0.875em; /* Smaller font size for tags */
    font-style: italic; /* Italicize the tags */
  }
</style>
