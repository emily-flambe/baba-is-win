---
import BaseLayout from '../layouts/BaseLayout.astro';

const title = 'Sign Up';
const description = 'Create a new account';
const permalink = `${Astro.site.href}signup`;
---

<BaseLayout title={title} description={description} permalink={permalink}>
  <div class="auth-container">
    <p class="auth-link">
      Already have an account? <a href="/login">Login</a>
    </p>
    
    <div class="header-with-help">
      <h1>Sign Up</h1>
      <div class="help-icon" id="help-icon">
        <svg width="20" height="20" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
          <circle cx="12" cy="12" r="10" stroke="currentColor" stroke-width="2"/>
          <path d="M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
          <path d="M12 17h.01" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
        <div class="help-tooltip" id="help-tooltip">
          Signing up allows you to engage with content on the site, and really isn't useful at all. You probably should not do it.
          <br><br>
          <a href="https://github.com/emily-flambe/baba-is-win/blob/main/docs/authentication.md" target="_blank">Learn more about authentication â†’</a>
        </div>
      </div>
    </div>
    <p class="subtitle">you really don't have to do this.</p>
    <form id="signup-form" class="auth-form">
      <div class="form-group">
        <label for="email">Email</label>
        <input 
          type="email" 
          id="email" 
          name="email" 
          required
          autocomplete="email"
        />
      </div>
      
      <div class="form-group">
        <label for="username">Username</label>
        <input 
          type="text" 
          id="username" 
          name="username" 
          required
          autocomplete="username"
          pattern="[a-zA-Z0-9_-]+"
          title="Username can only contain letters, numbers, underscores, and hyphens"
        />
      </div>
      
      <div class="form-group">
        <label for="password">Password</label>
        <input 
          type="password" 
          id="password" 
          name="password" 
          required
          autocomplete="new-password"
          minlength="8"
        />
        <small class="help-text">At least 8 characters</small>
      </div>
      
      <div class="form-group">
        <label class="section-label">Opt in to email updates (why????):</label>
        <div class="checkbox-group">
          <label class="checkbox-label">
            <input 
              type="checkbox" 
              id="emailBlogUpdates" 
              name="emailBlogUpdates"
            />
            <span class="checkbox-text">New blog posts</span>
          </label>
          <label class="checkbox-label">
            <input 
              type="checkbox" 
              id="emailThoughtUpdates" 
              name="emailThoughtUpdates"
            />
            <span class="checkbox-text">New "thoughts" (???)</span>
          </label>
          <label class="checkbox-label">
            <input 
              type="checkbox" 
              id="emailAnnouncements" 
              name="emailAnnouncements"
            />
            <span class="checkbox-text">Announcements</span>
          </label>
        </div>
        <small class="help-text">You can change these preferences later. Don't panic.</small>
      </div>
      
      <div id="error-message" class="error-message"></div>
      
      <button type="submit" class="submit-btn">Create Account</button>
    </form>
  </div>
</BaseLayout>

<style>
  .auth-container {
    max-width: 400px;
    margin: 2rem auto;
    padding: 1rem 2rem 2rem 2rem;
    background: var(--background-body);
    border: 1px solid var(--text-secondary);
    border-radius: 8px;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    opacity: 0.95;
  }

  .header-with-help {
    position: relative;
    display: flex;
    justify-content: center;
    align-items: flex-start;
    margin-bottom: 0.5rem;
  }

  h1 {
    font-family: var(--font-family-sans);
    font-size: 2rem;
    margin: 0;
  }

  .help-icon {
    position: absolute;
    top: 0;
    right: 0;
    color: var(--text-secondary);
    cursor: help;
    transition: color 0.2s ease;
  }

  .help-icon:hover {
    color: var(--text-main);
  }

  .help-tooltip {
    position: absolute;
    top: 0;
    left: calc(100% + 1rem);
    background: #f8f9fa;
    color: #333;
    border: 1px solid #ddd;
    border-radius: 8px;
    padding: 1rem;
    font-size: 0.8rem;
    line-height: 1.4;
    width: 280px;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
    z-index: 1000;
    opacity: 0;
    visibility: hidden;
    transform: translateX(-8px);
    transition: all 0.2s ease;
    font-family: var(--font-family-sans);
  }

  .help-icon:hover .help-tooltip {
    opacity: 1;
    visibility: visible;
    transform: translateX(0);
  }

  .help-tooltip a {
    color: var(--primary-color);
    text-decoration: none;
    font-weight: 500;
  }

  .help-tooltip a:hover {
    text-decoration: underline;
  }

  .subtitle {
    text-align: center;
    margin-bottom: 2rem;
    font-style: italic;
    font-size: 0.875rem;
    color: var(--text-secondary);
    margin-top: 0;
  }

  .auth-form {
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
  }

  .form-group {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
  }

  label {
    font-weight: 600;
    font-family: var(--font-family-sans);
    font-size: 0.875rem;
  }

  .section-label {
    display: block;
    margin-bottom: 0.75rem;
  }

  .checkbox-group {
    display: flex;
    flex-direction: column;
    gap: 0.75rem;
    margin-bottom: 0.5rem;
  }

  .checkbox-label {
    display: flex;
    align-items: flex-start;
    gap: 0.5rem;
    font-weight: 400;
    cursor: pointer;
  }

  .checkbox-label input[type="checkbox"] {
    margin: 0;
    width: auto;
    flex-shrink: 0;
    margin-top: 0.125rem;
  }

  .checkbox-text {
    font-size: 0.875rem;
    line-height: 1.4;
  }

  input {
    padding: 0.75rem;
    border: 1px solid var(--text-secondary);
    border-radius: 4px;
    font-size: 1rem;
    background: var(--background-body);
    color: var(--text-main);
    transition: border-color 0.2s;
  }

  input:focus {
    outline: none;
    border-color: var(--primary-color);
  }

  .help-text {
    color: var(--text-secondary);
    font-size: 0.75rem;
  }

  .error-message {
    color: #dc3545;
    font-size: 0.875rem;
    display: none;
  }

  .error-message.show {
    display: block;
  }

  .submit-btn {
    background: var(--primary-color);
    color: white;
    border: none;
    padding: 0.75rem 1.5rem;
    border-radius: 4px;
    font-weight: 600;
    font-size: 1rem;
    cursor: pointer;
    transition: opacity 0.2s;
  }

  .submit-btn:hover {
    opacity: 0.9;
  }

  .submit-btn:disabled {
    opacity: 0.6;
    cursor: not-allowed;
  }

  .auth-link {
    text-align: center;
    margin-top: 0;
    margin-bottom: 1.5rem;
    font-size: 0.75rem;
  }

  .auth-link a {
    color: var(--primary-color);
    text-decoration: none;
    transition: color 0.2s ease;
  }

  .auth-link a:hover {
    color: var(--text-main);
  }
</style>

<script>
  const form = document.getElementById('signup-form') as HTMLFormElement;
  const errorMessage = document.getElementById('error-message') as HTMLDivElement;
  const submitBtn = form.querySelector('button[type="submit"]') as HTMLButtonElement;

  form.addEventListener('submit', async (e) => {
    e.preventDefault();
    
    errorMessage.textContent = '';
    errorMessage.classList.remove('show');
    submitBtn.disabled = true;
    submitBtn.textContent = 'Creating account...';

    const formData = new FormData(form);
    const data = {
      email: formData.get('email'),
      username: formData.get('username'),
      password: formData.get('password'),
      emailBlogUpdates: formData.get('emailBlogUpdates') === 'on',
      emailThoughtUpdates: formData.get('emailThoughtUpdates') === 'on',
      emailAnnouncements: formData.get('emailAnnouncements') === 'on'
    };

    try {
      const response = await fetch('/api/auth/signup', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify(data)
      });

      const result = await response.json();

      if (!response.ok) {
        throw new Error(result.error || 'Signup failed');
      }

      // Redirect to home or dashboard
      window.location.href = '/';
    } catch (error) {
      errorMessage.textContent = error instanceof Error ? error.message : 'Signup failed';
      errorMessage.classList.add('show');
    } finally {
      submitBtn.disabled = false;
      submitBtn.textContent = 'Create Account';
    }
  });
</script>