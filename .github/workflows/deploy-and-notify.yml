name: Wait and Notify Subscribers

# IMPORTANT: This workflow does NOT deploy code - Cloudflare Workers auto-deploys on push to main.
# This workflow only waits for auto-deployment to complete, then triggers email notifications.
# DO NOT add wrangler deploy steps here - they conflict with auto-deployment.

on:
  push:
    branches: [main]
    paths:
      - 'src/data/blog-posts/published/**'
      - 'src/data/thoughts/published/**'

jobs:
  wait-and-notify:
    runs-on: ubuntu-latest
    
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2
          
      - name: Check for actual published content additions/modifications
        id: check_changes
        run: |
          echo "Checking if any files were actually added or modified in published directories..."
          
          # Get list of added/modified files in published directories
          ADDED_MODIFIED=$(git diff --name-status HEAD~1 HEAD | grep -E '^[AM]\s+src/data/(blog-posts|thoughts)/published/' || true)
          
          if [ -n "$ADDED_MODIFIED" ]; then
            echo "üìù Published content was added or modified:"
            echo "$ADDED_MODIFIED"
            echo "should_notify=true" >> $GITHUB_OUTPUT
          else
            echo "‚ÑπÔ∏è  No published content was added or modified (likely just moved to draft)"
            echo "should_notify=false" >> $GITHUB_OUTPUT
          fi
        
      - name: Wait for Cloudflare auto-deployment
        if: steps.check_changes.outputs.should_notify == 'true'
        run: |
          echo "üöÄ Content changes detected - waiting for Cloudflare to auto-deploy..."
          echo "‚è±Ô∏è  Waiting 2 minutes for deployment to complete..."
          sleep 120
        
      - name: Trigger email notifications
        if: steps.check_changes.outputs.should_notify == 'true'
        run: |
          echo "üìß Triggering email notifications..."
          curl -X POST "${{ secrets.SITE_URL }}/api/admin/trigger-content-sync" \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer ${{ secrets.CRON_SECRET }}" \
            --fail --silent --show-error
          echo "‚úÖ Email notification trigger completed"