DevelopmentWorkflow: &DevelopmentWorkflow
  setup:
    - "npm install to install dependencies"
    - "cp .dev.vars.example .dev.vars and configure environment variables"
    - "make migrate to set up database schema"
    - "npm run dev to start development server"
    
  testing_approach:
    framework: "Vitest with jsdom environment"
    commands: ["npm run test", "npm run test:watch"]
    coverage: "Built-in coverage reporting available"
    
  validation_sequence:
    - "npm run lint - ESLint validation"
    - "npm run typecheck - TypeScript validation" 
    - "npm run test - Run test suite"
    - "npm run build - Verify build succeeds"

ProductionWorkflow: &ProductionWorkflow
  deployment:
    - "npm run build to create production build"
    - "wrangler deploy to deploy to Cloudflare Workers"
    - "Verify deployment via production URL"
    
  monitoring:
    - "wrangler tail for live logs"
    - "Cloudflare dashboard for metrics and analytics"
    - "Email notifications via cron triggers"

ContentManagement: &ContentManagement
  blog_posts: "Add markdown files to src/data/blog/"
  thoughts: "Add markdown files to src/data/thoughts/"
  metadata: "Include frontmatter with title, date, description, tags"
  
  user_management:
    commands: "Comprehensive Makefile with 40+ user management commands"
    authentication: "JWT-based with PBKDF2 password hashing"
    sessions: "HTTP-only cookie management"

SecurityWorkflow: &SecurityWorkflow
  authentication:
    - "JWT tokens with secure HTTP-only cookies"
    - "PBKDF2 password hashing with salt"
    - "Session management and timeout handling"
    
  deployment_security:
    - "Environment variable protection"
    - "Cloudflare security features"
    - "D1 database access controls"