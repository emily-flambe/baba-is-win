# Project Identity & Configuration

ProjectIdentity: &ProjectIdentity
  name: "baba-is-win"
  repository: "baba-is-win"
  description: "Personal website and blog built with Astro, featuring blog posts, thoughts, museum portfolio, and authentication system"
  technology_stack:
    framework: "Astro"
    language: "TypeScript"
    database: "SQLite/D1"
    runtime: "Cloudflare Workers"
    testing: "Vitest/Jest"
    styling: "CSS"
  naming_conventions:
    github_repository: "baba-is-win"

ProjectStructure:
  content_directories:
    - "src/data/blog-posts/published/"
    - "src/data/thoughts/published/"
    - "public/assets/ (with proper subdirectories)"
  key_files:
    - "Content interface for easy content creation"
    - "Migration scripts for Cloudflare D1"

DevelopmentCommands:
  local_dev: "npm run dev"
  build: "npm run build"
  test: "npm test"
  deploy: "Cloudflare Pages with automatic deployments"

WorktreeManagement:
  location: "worktrees/ folder"
  naming: "worktrees/[feature-name]"
  purpose: "Keep repository organized with isolated feature development"

PullRequestGuidelines:
  workflow: "Share PR URLs immediately after creation"
  testing: "Test builds locally before deployment"
  asset_organization: "Maintain clean asset organization"
    cloudflare_resources: "baba-*"
    database: "baba-db"

ProjectStructure: &ProjectStructure
  architecture: "Static site with dynamic auth features on Cloudflare Workers"
  key_directories:
    src/components: "Astro components and Svelte components"
    src/pages: "Astro pages and API routes"
    src/lib: "Authentication, OAuth, and utility libraries"
    src/data: "Blog posts, thoughts, and content data"
    public/assets: "Static assets including images and fonts"
    migrations: "Database schema migrations"
    worktrees: "Feature branch worktrees"
  deployment_targets:
    production: "Cloudflare Pages"
    database: "Cloudflare D1"

DevelopmentCommands: &DevelopmentCommands
  development:
    local_dev: "npm run dev"
    build: "npm run build"
    preview: "npm run preview"
    database_setup: "bash scripts/setup-db.sh"
  testing:
    unit_tests: "npm test"
    coverage: "npm run test:coverage"
    oauth_tests: "npm run test:oauth"
  deployment:
    build_check: "npm run build"
    deploy: "Deploy via Cloudflare Pages integration"
>>>>>>> origin/main
