---
// Example integration of content processing utilities into blog post page
// This file shows how to modify src/pages/blog/[slug].astro to support premium content

import BaseLayout from '../../layouts/BaseLayout.astro';
import Bio from '../../components/Bio.astro';
import PremiumContentIndicator from '../../components/PremiumContentIndicator.astro';
import getPostData from '../../utils/getPostData';
import { processContentForDisplay } from '../../utils/contentProcessing';
import type { User } from '../../lib/auth/types';

const { slug } = Astro.params;

// Load all posts and find the matching one
const postModules = import.meta.glob('../../data/blog-posts/published/*.md', { eager: true });
const posts = Object.entries(postModules).map(([path, module]) => ({
  ...module,
  file: path
}));

const post = posts.find(p => {
  const postSlug = p.file.split('/').pop().split('.').shift();
  return postSlug === slug;
});

if (!post) {
  throw new Error(`Post not found: ${slug}`);
}

const { Content, frontmatter } = post;
const { title, description, publishDate } = frontmatter;
const { slug: postSlug, readingTime } = getPostData(post);
const permalink = `${Astro.site.href}blog/${postSlug}`;

// Get user from middleware (available in context.locals.user)
const user: User | null = Astro.locals.user || null;

// Process content for display based on user authentication and premium status
const rawContent = post.rawContent();
const contentData = processContentForDisplay(rawContent, frontmatter, user, 'blog');
---

<BaseLayout title={title} description={description} permalink={permalink} current="blog">
  <header>
    <p>{publishDate} ~ {readingTime}</p>
    <h1>{title}</h1>
    <hr />
  </header>
  
  <div class="container">
    <article class="content">
      {contentData.isTruncated ? (
        <!-- Show truncated content for anonymous users viewing premium content -->
        <div class="truncated-content">
          <p set:html={contentData.content}></p>
        </div>
      ) : (
        <!-- Show full content for non-premium or authenticated users -->
        <Content />
      )}
    </article>
    
    <!-- Show premium indicator if applicable -->
    <PremiumContentIndicator 
      isPremium={contentData.isPremium}
      requiresAuth={contentData.requiresAuth}
      isTruncated={contentData.isTruncated}
    />
    
    <hr />
    <div class="back-to-blog">
      <a href="/blog">‚Üê Back to Blog</a>
    </div>
    <Bio />
  </div>
</BaseLayout>

<style>
  header {
    text-align: center;
  }

  header h1 {
    margin-bottom: 0.7em;
  }

  header p {
    color: var(--text-secondary);
    text-transform: uppercase;
    font-family: var(--font-family-sans);
    font-weight: 600;
  }

  header hr {
    min-width: 100px;
    width: 30%;
  }

  .truncated-content {
    padding: 1rem;
    border: 2px dashed #ccc;
    border-radius: 8px;
    background: rgba(0, 0, 0, 0.02);
    position: relative;
  }

  .truncated-content::after {
    content: "Content preview - sign in to read more";
    position: absolute;
    bottom: 0.5rem;
    right: 0.5rem;
    font-size: 0.8rem;
    color: var(--text-secondary);
    font-style: italic;
  }

  .back-to-blog {
    text-align: center;
    margin: 2em 0;
  }

  .back-to-blog a {
    color: var(--text-secondary);
    text-decoration: none;
    font-family: var(--font-family-sans);
    font-weight: 600;
  }

  .back-to-blog a:hover {
    text-decoration: underline;
  }
</style>