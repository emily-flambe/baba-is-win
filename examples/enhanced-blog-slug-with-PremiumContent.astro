---
// Enhanced blog post page that uses the new PremiumContent component
// This replaces the example in enhanced-blog-slug.astro with the new component approach

import BaseLayout from '../../src/layouts/BaseLayout.astro';
import Bio from '../../src/components/Bio.astro';
import PremiumContent from '../../src/components/PremiumContent.astro';
import getPostData from '../../src/utils/getPostData';
import type { User } from '../../src/lib/auth/types';

const { slug } = Astro.params;

// Load all posts and find the matching one
const postModules = import.meta.glob('../../src/data/blog-posts/published/*.md', { eager: true });
const posts = Object.entries(postModules).map(([path, module]) => ({
  ...module,
  file: path
}));

const post = posts.find(p => {
  const postSlug = p.file.split('/').pop().split('.').shift();
  return postSlug === slug;
});

if (!post) {
  throw new Error(`Post not found: ${slug}`);
}

const { Content, frontmatter } = post;
const { title, description, publishDate } = frontmatter;
const { slug: postSlug, readingTime } = getPostData(post);
const permalink = `${Astro.site.href}blog/${postSlug}`;

// Get user from middleware (available in context.locals.user)
const user: User | null = Astro.locals.user || null;
const isAuthenticated = !!user;

// Get raw content for processing
const rawContent = post.rawContent();
---

<BaseLayout title={title} description={description} permalink={permalink} current="blog">
  <header>
    <p>{publishDate} ~ {readingTime}</p>
    <h1>{title}</h1>
    <hr />
  </header>
  
  <div class="container">
    <article class="content">
      <!-- New PremiumContent component handles all the logic -->
      <PremiumContent 
        content={rawContent}
        isPremium={frontmatter.premium || false}
        isAuthenticated={isAuthenticated}
        contentType="blog"
        frontmatter={frontmatter}
        ContentComponent={Content}
      />
    </article>
    
    <hr />
    <div class="back-to-blog">
      <a href="/blog">‚Üê Back to Blog</a>
    </div>
    <Bio />
  </div>
</BaseLayout>

<style>
  header {
    text-align: center;
  }

  header h1 {
    margin-bottom: 0.7em;
  }

  header p {
    color: var(--text-secondary);
    text-transform: uppercase;
    font-family: var(--font-family-sans);
    font-weight: 600;
  }

  header hr {
    min-width: 100px;
    width: 30%;
  }

  .back-to-blog {
    text-align: center;
    margin: 2em 0;
  }

  .back-to-blog a {
    color: var(--text-secondary);
    text-decoration: none;
    font-family: var(--font-family-sans);
    font-weight: 600;
  }

  .back-to-blog a:hover {
    text-decoration: underline;
  }
</style>